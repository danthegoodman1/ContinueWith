// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: authorization_codes.sql

package query

import (
	"context"
	"time"
)

const insertAuthorizationCode = `-- name: InsertAuthorizationCode :exec
insert into authorization_codes (
    id
    , user_id
    , scopes
    , expires
) values (
     $1
     , $2
     , $3
     , $4
 )
`

type InsertAuthorizationCodeParams struct {
	ID      string
	UserID  string
	Scopes  []string
	Expires time.Time
}

func (q *Queries) InsertAuthorizationCode(ctx context.Context, arg InsertAuthorizationCodeParams) error {
	_, err := q.db.Exec(ctx, insertAuthorizationCode,
		arg.ID,
		arg.UserID,
		arg.Scopes,
		arg.Expires,
	)
	return err
}

const selectAuthorizationCode = `-- name: SelectAuthorizationCode :one
select id, user_id, scopes, expires, created_at, updated_at
from authorization_codes
where id = $1
`

func (q *Queries) SelectAuthorizationCode(ctx context.Context, id string) (AuthorizationCode, error) {
	row := q.db.QueryRow(ctx, selectAuthorizationCode, id)
	var i AuthorizationCode
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Scopes,
		&i.Expires,
		&i.CreatedAt,
		&i.UpdatedAt,
	)
	return i, err
}
