// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.19.1
// source: scopes.sql

package query

import (
	"context"
)

const listScopes = `-- name: ListScopes :many
select id, description, created, updated
from scopes
`

func (q *Queries) ListScopes(ctx context.Context) ([]Scope, error) {
	rows, err := q.db.Query(ctx, listScopes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Scope
	for rows.Next() {
		var i Scope
		if err := rows.Scan(
			&i.ID,
			&i.Description,
			&i.Created,
			&i.Updated,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
